{
    "lang": "en_US",
    "language": "English (United States)",

    "bot.name": "VeryUsefulBot",
    "bot.select_lang": "Select Language",
    "bot.err": "Error {}",
    "bot.wrong_dir.description": "  Try running 'main.py' in '/dc_bot' directory.n  After exiting by pressing [Enter], run 'cd dc_bot'.\n",
    "bot.enter_to_exit": "Press [Enter] to exit ...",
    "bot.token_notfound": "Token is not found, Please enter token or press [Enter] to exit.",
    "bot.token_entered": "You entered: {}",
    "bot.token_confirm": "Are you sure you want to save and use this token? [y/n] ",
    "bot.login": "{} logged in successfully.",
    "bot.helloworld": "Hello World!",
    "bot.cog_loaded": "Command module loaded:{}",
    "bot.cog_load_error": "[ERROR] Error while loading:{0}\nError:{1}",
    "bot.cogs_load_count": "Loaded {0} command modules, {1} command module(s) not loaded.",

    "cmd.option.description": "[Option] Change user option",
    "cmd.option.not_exist": "Key `{}` does not exist.",
    "cmd.option.not_color": "`{}` is not `color`.",
    "cmd.option.not_int": "`{}` is not `int`.",
    "cmd.option.changed": "Option changed",
    "cmd.option.changed_to": "**`{0}`** has been set to **`{1}`** (Default: `{2}`)",
    
    "cmd.notice_after.description": "[Notice] Notify after a specific time",
    "cmd.notice_after.event": "Enter event name",
    "cmd.notice_after.time": "Enter time in integer",
    "cmd.notice_after.unit": "Unit",
    "cmd.notice_after.minute": "Minutes",
    "cmd.notice_after.hour": "Hours",
    "cmd.notice_after.days": "Days",
    "cmd.notice_after.exist": "The event name exists, please use another one instead.",
    "cmd.notice_after.after_mins": "After {} minutes",
    "cmd.notice_after.after_hours": "After {} hours",
    "cmd.notice_after.after_days": "After {} days",
    "cmd.notice_after.set": "Notification Set",
    "cmd.notice_after.trigger": "Triggers",
    "cmd.notice_after.trigger_time": "Time",

    "cmd.notice_at.description": "[Notice] Notice at a specific time",
    "cmd.notice_at.event": "Enter event name",
    "cmd.notice_at.year": "Year",
    "cmd.notice_at.month": "Month",
    "cmd.notice_at.day": "Date",
    "cmd.notice_at.exist": "The event name exists, please use another one instead.",
    "cmd.notice_at.set": "Notification Set",
    "cmd.notice_at.trigger_time": "Time",

    "cmd.notice_delete.description": "[Notice] Select a notification/notice to delete",
    "cmd.notice_delete.cancel": "Cancel",
    "cmd.notice_delete.cancel_des": "Choose this one to close this menu.",
    "cmd.notice_delete.placeholder": "Please select the one you want to delete",
    "cmd.notice_delete.deleted": "Deleted: {}",
    "cmd.notice_delete.error": "Something went wrong, please try again later.",
    "cmd.notice_delete.select": "Please select the one you want to delete",

    "cmd.sticky_note.description": "[Notice] Add a sticky note",
    "cmd.sticky_note.title": "Enter title",
    "cmd.sticky_note.content": "Enter content",
    "cmd.sticky_note.exist": "The event name exists, please use another one instead.",
    "cmd.sticky_note.word_limit": "Too many letters ({}/150)",

    "cmd.notice_list.description": "[Notice] Show my sticky notes and notifications",
    "cmd.notice_list.title": "Notice",
    "cmd.notice_list.sticky_notes_below": "Sticky Notes:",
    "cmd.notice_list.notice_below": "Notifications:",
    "cmd.notice_list.none": "None",

    "notice.title": "Notice",

    "oj.easy": "EZ",
    "oj.normal": "Normal",
    "oj.hard": "Asian",
    "oj.submit": "Submit Code",
    "oj.insert": "Please enter code",
    "oj.placeholder": "The content will not be saved, make sure to copy your work and paste it somewhere before exiting!",
    "oj.compilation_err": "compilation Error",
    "oj.error": "Error",
    "oj.test_n_err:": "Test {}: Error",
    "oj.passed_txt": "Passed: {0}/{1}",
    "oj.test_n_passed": "\nTest {}: Passed",
    "oj.test_n_failed": "\nTest {}: Failed",
    "oj.test_n_input": "Test {} Input",
    "oj.test_n_expected": "Test {} Expected Output",
    "oj.test_n_output": "Test {} Your Output",

    "cmd.code.description": "[OJ] Show question",
    "cmd.code.difficulty": "Difficulty",
    "cmd.code.id": "Question ID",
    "cmd.code.hint": "Hint",
    "cmd.code.input_format": "Input Format",
    "cmd.code.output_format": "Output Format",
    "cmd.code.submit": "Submit Code",
    "cmd.code.submit_description": "Use `/submit_code difficulty:{0} id:{1}` to open the pop-up window",
    "cmd.code.source": "Source",
    "cmd.code.last": "(Last question)",
    "cmd.code.example": "Examples",
    "cmd.code.example_imput": "Example Input {}",
    "cmd.code.example_output": "Example Output {}",
    "cmd.code.example_des": "Example {} Description",
    "cmd.code.not_exist": "Id {1} does not exist in difficulty {0}",

    "cmd.code_submit.description": "[OJ] Submit Code",
    "cmd.code_submit.difficulty": "Difficulty",
    "cmd.code_submit.id": "Question ID",
    "cmd.code_submit.lang": "C/C++",
    "cmd.code_submit.c": "C",
    "cmd.code_submit.c_plus_plus": "C++",
    "cmd.code_submit.winnt": "VeryUsefulBot is running on Windows, which is not supported currently so this feature is temporarly disabled.",
    "cmd.code_submit.not_exist": "Id {1} does not exist in difficulty {0}.",

    "cmd.daysleft.description": "[Date] Countdown",
    "cmd.daysleft.year": "Enter Year",
    "cmd.daysleft.month": "Enter Month",
    "cmd.daysleft.date": "Enter Date",
    "cmd.daysleft.add": "Include the first day?",
    "cmd.daysleft.yes": "Yes (+1)",
    "cmd.daysleft.no": "No",
    "cmd.daysleft.not_valid": "{1}/{2}/{0} is not a valid date",
    "cmd.daysleft.left": "{} Days Left",
    "cmd.daysleft.included": " (Includes the first day)",
    "cmd.daysleft.target": "Target date: {1}/{2}/{0}",

    "eat.prefix": [
        "Let's go with","I think","It has to be","Go with","Why don't we get some","... NO\n","I recommend","Order some","I haven't eaten","I just told you that I want"
    ],
    "eat.ends": [
        "!","is a good choice.","!","!","?","YES\nGet almost almost anything\n(Not Sponsored)",".","for me, thanks.","for a long time.","!"
    ],

    "cmd.eat.description": "[Random] Pick a food from the food list (Chinese Only)",
    "cmd.amount": "Amount",

    "flashcard.previous": "Last One",
    "flashcard.toggle": "Chinese/English",
    "flashcard.next": "Next One",

    "cmd.flashcard.description": "[FlashCard] Open Flash Card",
    "cmd.flashcard.example": "Testing",
    "cmd.flashcard.wordlist": "Choose the word list",
    "cmd.flashcard.index": "[Optional] Starting from number ...",

    "calculator.backspace": "âŒ«",
    "calculator.clear_all": "AC",

    "cmd.calculator.description": "[Calculator] Open Calculator",

    "menu.evaluate": "Evaluate",
    "menu.evaluate.fail": "An error occured: \n{}",

    "wordle.not_english": "{} includes non-English Character.",
    "wordle.quit": "QUIT",
    "wordle.quit_game": "The answer was {}, Game ended.",
    "wordle.etc": "...",
    "wordle.wrong_len": "The length of `{0}` is not {1}.",
    "wordle.not_in": "{} is not in the word list.",
    "wordle.guess": "Attempt {0}/{1}",
    "wordle.correct": "Correct",
    "wordle.wrong_pos": "Wrong Position",
    "wordle.incorrect": "Not in the word",
    "wordle.havent_tried": "Left Characters",
    "wordle.you_lose": "You lost, the answer was {}",
    "wordle.you_win": "You won",
    "wordle.games_played": "Played",
    "wordle.games_won": "Won",
    "wordle.win_rate": "Win %",
    "wordle.streak": "Streak",

    "cmd.wordle.description": "[Worlde] Play Wordle",
    "cmd.wordle.guess": "Enter your word",

    "menu.wordle": "Use this as your Wordle guess",

    "menu.wordcount": "Word Count",
    "menu.wordcount.title": "Word Count",
    "menu.wordcount.words": "Word Count",
    "menu.wordcount.chars": "Character Count",
    "menu.wordcount.chars_no_space": "Character Count (Space excluded)",
    "menu.wordcount,err": "An error occurred: {}",

    "expenses.categories.main_income": "Main",
    "expenses.categories.side_job": "Side",
    "expenses.categories.investment": "Invs",
    "expenses.categories.other_income": "Ot/I",
    "expenses.categories.monthly_expenses": "Mont",
    "expenses.categories.food": "Food",
    "expenses.categories.transportation": "Trans",
    "expenses.categories.entertainment": "Play",
    "expenses.categories.education": "Lear",
    "expenses.categories.donation": "Dona",
    "expenses.categories.lend": "Lend",
    "expenses.categories.other_expenses": "Ot/E",

    "expenses.initialize": "Initialize",

    "passbook.date": "Date",
    "passbook.category": "Cata",
    "passbook.description": "Des",
    "passbook.withdraws": "Withdraws",
    "passbook.deposit": "Deposit",
    "passbook.balance": "Balance",
    "passbook.spacer": " ",

    "cmd.m_wallet.description": "[Money Tracker] Check Balance",
    "cmd.m_wallet.someones_wallet": "{}'s wallet",
    "cmd.m_wallet.your_balance": "Your Balance: **{}**",

    "cmd.m_new_record.description": "[Money Tracker] New",
    "cmd.m_new_record.income": "[Income] {}",
    "cmd.m_new_record.expense": "[Expense] {}",
    "cmd.m_new_record.category": "Catagory",
    "cmd.m_new_record.balance": "Balance",
    "cmd.m_new_record.amount": "Amount",
    "cmd.m_new_record.des": "Description",

    "cmd.slot.description": "[MiniGame] Slot Machine",
    "cmd.slot.again": "Play Again",
    "cmd.slot.title": "Slot Machine",
    "cmd.slot.jackpot": "Jackpot!",
    "cmd.slot.win": "You Won!",
    "cmd.slot.win_two": "Got 2 ",
    "cmd.slot.lose": "You Lost!",



    "cmd.simfrac.description": "[Fraction] Simpfrac",
    "cmd.simfrac.a": "The top",
    "cmd.simfrac.b": "The bottom",
    "cmd.simfrac.result1": "{}",
    "cmd.simfrac.result2": "{0} / {1}",
    "cmd.simfrac.origional": "Origional: {0} / {1}",
    "cmd.simfrac.float": "In other form: ",
    "cmd.simfrac.percentage": "In other form: ",

    "cmd.factorize.description": "[Factorize] Factorize",
    "cmd.factorize.n": "Enter the integer",
    "cmd.factorize.is_prime": "`{}` is prime.",
    "cmd.factorize.result": "Factorize: `{}`",

    "cmd.solve21.description": "[Solve Equation] Solve Equations with 2 variables",
    "cmd.solve21.eq1": "Equation 1",
    "cmd.solve21.eq2": "Equation 2",
    "cmd.solve21.one_sol": "1 Solution",
    "cmd.solve21.inf_sol": "No Solution",
    "cmd.solve21.no_sol": "Infinite Solutions",
    "cmd.solve21.err": "Error",
    
    "cmd.solve31.description": "[Solve Equation] Solve Equations with 3 variables",
    "cmd.solve31.eq1": "Equation 1",
    "cmd.solve31.eq2": "Equation 2",
    "cmd.solve31.eq3": "Equation 3",
    "cmd.solve31.one_sol": "1 Solution",
    "cmd.solve31.inf_sol": "No Solution",
    "cmd.solve31.no_sol": "Infinite Solutions",
    "cmd.solve31.err": "Error",

    "cmd.average.description": "[Data Analysis] Calculate Average",
    "cmd.average.items": "Enetr number seperated with space",
    "cmd.average.result": "Average: `{}`",
    "cmd.average.value": "Value {}",
    "cmd.average.err": "Error",

    "cmd.correlation.description": "[Data Analysis] Calculate Correlation",
    "cmd.correlation.x": "Enetr data 1 seperated with space",
    "cmd.correlation.y": "Enetr data 2 seperated with space",
    "cmd.correlation.correlation": "Correlation",

    "cmd.rand.description": "[Random] Choose a random one",
    "cmd.rand.items": "Enter Options (Seperate with space)",
    "cmd.rand.amount": "Amount (Optional, Default:1, 0: Pick Out Random Amount)",
    "cmd.rand.title1": "Random: {}",
    "cmd.rand.title2": "{0} Random: {1}",

    "cmd.dice.desription": "[Random] Roll a dice",
    "cmd.dice.faces": "Faces (Optional, Default: 6)",

    "cmd.p.description": "[Permutation] nPk",
    "cmd.p.n": "n",
    "cmd.p.k": "k",
    "cmd.p.err": "Error",
    "cmd.p.title": "`{}` Permutations",

    "cmd.c.description": "[Combinations] nCk",
    "cmd.c.n": "n",
    "cmd.c.k": "k",
    "cmd.c.err": "Error",
    "cmd.c.title": "`{}` Combinations",

    "cmd.vector.description": "[Vector] Find Vector / Dot Product / Cross Product",
    "cmd.vector.x0": "x value of Point A / Vector",
    "cmd.vector.y0": "y value of Point A / Vector",
    "cmd.vector.z0": "z value of Point A / Vector",
    "cmd.vector.action": "Action",
    "cmd.vector.x1": "x value of Point A / Vector",
    "cmd.vector.y1": "y value of Point A / Vector",
    "cmd.vector.z1": "z value of Point A / Vector",
    "cmd.vector.to": "to",
    "cmd.vector.dot": "Dot Product (dot)",
    "cmd.vector.cross": "Cross Product (cross)",
    "cmd.vector.length": "Length",
    "cmd.vector.vector": "Vector",
    "cmd.vector.point": "Point",
    "cmd.vector.dot_product": "Dot Product",
    "cmd.vector.cross_product": "Cross Product",

    "cmd.vectorl.description": "[Vector] Find The Length of the Vector",
    "cmd.vectorl.length": "Length: ",
    "cmd.vectorl.vector": "Vector",

    "cmd.surface.description": "[Surface] Find the equation of the surface given a normal vector and a point",
    "cmd.surface.nx": "x value of a normal vector",
    "cmd.surface.ny": "y value of a normal vector",
    "cmd.surface.nz": "z value of a normal vector",
    "cmd.surface.x": "x value of a point that is on the surface",
    "cmd.surface.y": "y value of a point that is on the surface",
    "cmd.surface.z": "z value of a point that is on the surface",
    "cmd.surface.surface": "Surface",
    "cmd.surface.n": "Normal Vector",
    "cmd.surface.point": "Sny Point",

    "cmd.det3.description": "[Determinant] 3x3 Determinant",
    "cmd.det3.a1": "(1,1)",
    "cmd.det3.a2": "(1,2)",
    "cmd.det3.a3": "(1,3)",
    "cmd.det3.b1": "(2,1)",
    "cmd.det3.b2": "(2,2)",
    "cmd.det3.b3": "(2,3)",
    "cmd.det3.c1": "(3,1)",
    "cmd.det3.c2": "(3,2)",
    "cmd.det3.c3": "(3,3)",
    "cmd.det3.determinant": "Determinant",

    "cmd.det2.description": "[Determinant] 2x2 Determinant",
    "cmd.det2.a1": "(1,1)",
    "cmd.det2.a2": "(1,2)",
    "cmd.det2.b1": "(2,1)",
    "cmd.det2.b2": "(2,2)",
    "cmd.det2.determinant": "Determinant",

    "cmd.invrmtx2.description": "[Matrix] Find the 2x2 Inverse Matrix)",
    "cmd.invrmtx2.a": "(1,1)",
    "cmd.invrmtx2.b": "(1,2)",
    "cmd.invrmtx2.c": "(2,1)",
    "cmd.invrmtx2.d": "(2,2)",
    "cmd.invrmtx2.exist": "The Matrix has the inverse:",
    "cmd.invrmtx2.not_exist": "The Matrix has no inverse",
    "cmd.invrmtx2.origional": "Origional: ",
    "cmd.invrmtx2.inverse": "Inverse: ",

    "cmd.common_deg_to_rad.description": "[Trigonometry] Degree to Radius (Common Ones)",
    "cmd.common_deg_to_rad.angle": "Angle in Degree"
}